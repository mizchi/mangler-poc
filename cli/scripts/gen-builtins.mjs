import fs from "fs/promises";
import path from "path";
import {
  getDomReserved,
  getTerserDompropsReserved,
  getWorkerReserved,
  getEsReserved,
  getCloudflareWorkersReserved
} from "../lib/precollect.mjs";
import { httpHeaders } from "../gen/httpHeaders.mjs";

function getHttpHeadersReserved() {
  return new Set([
    ...httpHeaders,
    ...httpHeaders.map((header) => header.toLowerCase()),
    ...httpHeaders.map((header) => header.toUpperCase()),
  ]);
}

const __dirname = path.dirname(new URL(import.meta.url).pathname);
export async function dumpReservedWords(){
  const tsPath = path.join(__dirname, '../../node_modules/typescript/lib/typescript.js');
  const terserMainPath = path.join(__dirname, '../node_modules/terser/dist/bundle.min.js');
  const cfWorkersTypesPath = path.join(__dirname, "../node_modules/@cloudflare/workers-types/index.d.ts");
  const nodeGlobalDtsPath = path.join(__dirname,"../node_modules/@types/node/globals.d.ts");

  const tsLibDir = path.dirname(tsPath);
  const dompropsReserved = await getTerserDompropsReserved(terserMainPath);
  const domReserved = await getDomReserved(tsLibDir);
  const workerReserved = await getWorkerReserved(tsLibDir);
  const esReserved = await getEsReserved(tsLibDir);
  const httpHeadersReserved = getHttpHeadersReserved();
  const nodeGlobalReserved = await getCloudflareWorkersReserved(nodeGlobalDtsPath);
  const cloudflareWorkersReserved = await getCloudflareWorkersReserved(cfWorkersTypesPath);

  console.log("domprops", dompropsReserved.size);
  console.log("esReserved.size", esReserved.size);
  console.log("domReserved.size", domReserved.size);
  console.log("workerReserved.size", workerReserved.size);
  console.log("httpHeadersReserved.size", httpHeadersReserved.size);
  console.log("nodeGlobalReserved.size", nodeGlobalReserved.size);
  console.log("cloudflareWorkersReserved.size", cloudflareWorkersReserved.size);


  const output = `// generated by optools
export const domprops = ${JSON.stringify([...dompropsReserved].sort(), null, 2)};
export const es = ${JSON.stringify([...esReserved].sort(), null, 2)};
export const dom = ${JSON.stringify([...domReserved].sort(), null, 2)};
export const worker = ${JSON.stringify([...workerReserved].sort(), null, 2)};
export const httpHeaders = ${JSON.stringify([...httpHeadersReserved].sort(), null, 2)};
export const node = ${JSON.stringify([...nodeGlobalReserved].sort(), null, 2)};
export const cloudflareWorkers = ${JSON.stringify([...cloudflareWorkersReserved].sort(), null, 2)};
`;
  await fs.writeFile(path.join(__dirname, '../gen/builtins.mjs'), output);
}

await dumpReservedWords();