import fs from "fs/promises";
import path from "path";
import {
  getDomReserved,
  getTerserDompropsReserved,
  getWorkerReserved,
  getEsReserved
} from "../lib/precollect.mjs";

const __dirname = path.dirname(new URL(import.meta.url).pathname);
export async function dumpReservedWords(){
  // console.log("dumpReservedWords", import.meta);

  const tsPath = path.join(__dirname, '../../node_modules/typescript/lib/typescript.js');
  const terserMainPath = path.join(__dirname, '../node_modules/terser/dist/bundle.min.js');

  const tsLibDir = path.dirname(tsPath);

  const dompropsReserved = await getTerserDompropsReserved(terserMainPath);
  const domReserved = await getDomReserved(tsLibDir);
  const workerReserved = await getWorkerReserved(tsLibDir);
  const esReserved = await getEsReserved(tsLibDir);
  const full = new Set([...esReserved, ...domReserved, ...workerReserved]);
  const fullWithDomprops = new Set([
    ...esReserved,
    ...domReserved,
    ...workerReserved,
    ...dompropsReserved,
  ]);

  console.log("domprops", dompropsReserved.size);
  console.log("esReserved.size", esReserved.size);
  console.log("domReserved.size", domReserved.size);
  console.log("workerReserved.size", workerReserved.size);
  console.log("full", full.size);
  console.log("fullWithDomprops", fullWithDomprops.size);
  const output = `// generated by cli/scripts/gen-builtins.mjs
export const domprops = ${JSON.stringify([...dompropsReserved].sort(), null, 2)};
export const es = ${JSON.stringify([...esReserved].sort(), null, 2)};
export const dom = ${JSON.stringify([...domReserved].sort(), null, 2)};
export const worker = ${JSON.stringify([...workerReserved].sort(), null, 2)};
`;
  // const output = {
  //   domprops: [...dompropsReserved],
  //   es: [...esReserved],
  //   dom: [...domReserved],
  //   worker: [...workerReserved],
  // };
  await fs.writeFile(path.join(__dirname, '../gen/builtins.mjs'), output);
  // conso
}

await dumpReservedWords();