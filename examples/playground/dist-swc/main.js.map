{"version":3,"sources":["/Users/kotaro.chikuba/ghq/github.com/mizchi/optools/examples/playground/src/sub.ts","/Users/kotaro.chikuba/ghq/github.com/mizchi/optools/examples/playground/src/index.ts"],"sourcesContent":["type Internal = {\n  internalKey: number;\n};\n\ntype Output = {\n  result: {\n    value: number;\n  };\n};\n\nexport type PubType = {\n  pubTypeKey: number;\n};\n\nexport interface InterfaceType {\n  ikey: number;\n}\n\nexport function sub(opts: { xxx: number; yyy: string }) {\n  const x = new X();\n  return x.publicMethod().result;\n}\n\ntype FetchRequestBodyType = {\n  keepMe: string;\n};\n\nfunction createFetchRequestBodyType(): FetchRequestBodyType {\n  return { keepMe: \"xxx\" } as FetchRequestBodyType;\n}\n\nexport function effect(str: string) {\n  const newBody = createFetchRequestBodyType();\n  return fetch(\"https://example.com\", {\n    method: \"POST\",\n    body: JSON.stringify(newBody),\n  });\n}\n\n// internal class. do not export\nclass X {\n  public publicMethod(): Output {\n    return { result: { value: 1 } };\n  }\n}\n\nexport class PublicClass {\n  #internal = 1;\n  \"A-B\"(): void {}\n  public publicMethod(): Output {\n    return { result: { value: 1 } };\n  }\n\n  private privateMethod() {\n    console.log(\"private method\");\n  }\n  private privateMethod2() {\n    console.log(\"private method2\");\n  }\n  private privateMethod3() {\n    console.log(\"private method3\");\n  }\n  private privateMethod4() {\n    console.log(\"private method4\");\n  }\n}\n\nexport module PublicModule {\n  const x = 1;\n  module InnerModule {\n    const inner = 1;\n  }\n  export module nested {\n    export const y = 1;\n  }\n  export interface PublicModuleInterface {}\n  export class PublicModuleClass {\n    public publicModuleClassMethod(): Output {\n      return { result: { value: 1 } };\n    }\n    private privateModuleClassMethod() {}\n  }\n  export type PublicModuleType = {\n    pubModType: number;\n  };\n  export const pubModConst = 1;\n  class InternalClass {\n  }\n}\n","export {\n  effect,\n  InterfaceType,\n  PublicClass,\n  PublicModule,\n  PubType,\n  sub,\n} from \"./sub\";\n\nconst G = MyGlobal;\n\nconsole.log(G.zzzzzzzzzz);\n// export type { fetch } from \"./fetch\";\n"],"names":[],"mappings":"06BAkBO,SAAS,IAAI,CAAkC,EACpD,IAAM,EAAI,IAAI,EACd,OAAO,EAAE,eAAe,MAC1B,CAMA,SAAS,IACP,MAAO,CAAE,EAAQ,KAAM,CACzB,CAEO,SAAS,OAAO,CAAW,EAChC,IAAM,EAAU,IAChB,OAAO,MAAM,sBAAuB,CAClC,OAAQ,OACR,KAAM,KAAK,UAAU,EACvB,EACF,CAGA,IAAA,AAAM,EAMH,AANH,iCAAM,2BAAA,iBAAA,IACG,IAAA,qBAAP,SAAO,IACL,MAAO,CAAE,OAAQ,CAAE,MAAO,CAAE,CAAE,CAChC,YAHI,SAOJ,cADK,IAAA,AAAM,YAqBV,AArBI,iCAAM,2BAAA,GACX,+BAAA,uBAAY,kBADD,IAEX,IAAA,YAAA,aAAe,IACR,IAAA,qBAAP,SAAO,IACL,MAAO,CAAE,OAAQ,CAAE,MAAO,CAAE,CAAE,CAChC,IAEQ,IAAA,sBAAR,SAAQ,IACN,QAAQ,IAAI,iBACd,IACQ,IAAA,uBAAR,SAAQ,IACN,QAAQ,IAAI,kBACd,IACQ,IAAA,uBAAR,SAAQ,IACN,QAAQ,IAAI,kBACd,IACQ,IAAA,uBAAR,SAAQ,IACN,QAAQ,IAAI,kBACd,YAlBW,KAqBN,IAAO,0BAEZ,IAAO,kBAAA,IAAA,OAGA,IAAO,iBACC,EAAI,IADL,2BAIP,IAAA,AAAM,EAMX,AANK,iCAAM,2BAAA,iBAAA,IACJ,IAAA,gCAAP,SAAO,IACL,MAAO,CAAE,OAAQ,CAAE,MAAO,CAAE,CAAE,CAChC,IACQ,IAAA,iCAAR,SAAQ,IAA4B,YAJzB,OAAA,kBAAA,IASA,YAAc,IAlBf,eAAA,iBCnEd,QACE,UAAA,MAAM,CACN,iBAAA,aAAa,CACb,eAAA,WAAW,CACX,gBAAA,YAAY,CACZ,WAAA,OAAO,CACP,OAAA,GAAG,CACU,CAEf,IAAM,EAAI,SAEV,QAAQ,IAAI,EAAE"}